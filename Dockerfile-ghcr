# To build an auto-instrumentation image for Java, please:
#  - Grant the necessary access to the jar. `chmod 644  /splunk-otel-javaagent.jar`
#  - Symlink '/splunk-otel-javaagent.jar' to `/javaagent.jar` to support compatability with the
#    https://github.com/open-telemetry/opentelemetry-operator project.
#  - For this docker image to be used for auto-instrumentation by container injection. a Linux 
#    command or custom execuable binary named cp must be available within the image.
#    Code Refernece: https://github.com/open-telemetry/opentelemetry-operator/blob/main/pkg/instrumentation/javaagent.go
#  - Temp note: This custom base image size is ~926kB.

# create a helper application
FROM golang AS helper
WORKDIR /helper/
COPY cp.go .
COPY go.mod .
# build a slim helper executable
# -s omits the symbol table and debug information; -w omits the DWARF symbol table
RUN go build -ldflags "-s -w" cp.go

# prep the java-agent.jar
FROM busybox AS builder
ARG RELEASE_VER
ENV RELEASE_VER=$RELEASE_VER
WORKDIR /builder/
ADD https://github.com/signalfx/splunk-otel-java/releases/download/${RELEASE_VER}/splunk-otel-javaagent.jar .
RUN chmod 644 -R .

# copy the artifacts from the helper and builder stages into the final image
FROM scratch AS final
COPY --from=builder /builder/ /
COPY --from=helper /helper/cp /bin/cp
ENV PATH="${PATH}:/bin"

